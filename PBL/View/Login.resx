<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        a2rOAAAAAElFTkSuQmCC
</value>
  </data>
</root>