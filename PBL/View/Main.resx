<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>